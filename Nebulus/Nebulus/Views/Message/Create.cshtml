@model Nebulus.Models.MessageItem
@using DayPilot.Web.Mvc
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.MessageItemId, null)
    
    @*<div class="form-horizontal">*@
        <div id="Wrapper">
            <form action="">
                <div id="MessageWrapper">
                    <fieldset>
                        <legend>MESSAGE</legend>
                        <div id="" class="FloatDivLeft">
                            <p>
                                <label for="MessageTitle">Message Title:</label>
                                @Html.EditorFor(model => model.MessageTitle, null)
                                @Html.ValidationMessageFor(model => model.MessageTitle, "", new { @class = "text-danger" })
                            </p>
                        </div>

                        <div id="" class="FloatDivLeft">
                            <p>
                                <label for="MessagePriority">Message Priority:</label>
                                @Html.EnumDropDownListFor(model => model.MessagePriority)
                                @Html.ValidationMessageFor(model => model.MessagePriority, "", new { @class = "text-danger" })
                            </p>
                        </div>

                        <div id="" class="FloatDivRight">
                            <p>
                                <label for="MessageType">Message Type:</label>
                                @Html.EnumDropDownListFor(model => model.MessageType)
                                @Html.ValidationMessageFor(model => model.MessageType, "", new { @class = "text-danger" })
                            </p>
                        </div>

                        <div id="" class="ClearBoth">
                            <p>
                                <label for="MessageBody">Message:</label><br />
                                @Html.TextAreaFor(Model => Model.MessageBody, new { @class = "ckeditor" })
                                @*@Html.ValidationMessageFor(model => model.MessageBody, "", new { @class = "text-danger" })*@
                            </p>
                        </div>
                    </fieldset>
                </div><!--end of MessageWrapper-->

                <div id="AdvancedWrapper">
                    <fieldset>
                        <legend>ADVANCED</legend>
                        <fieldset class="odd">
                            <div id="" class="ClearBoth">
                                <div id="" class="FloatDivLeft">
                                    <p>
                                        <label for="ScheduleStart">Schedule:</label><br>
                                        @Html.EditorFor(model => model.ScheduleStart)
                                        @Html.ValidationMessageFor(model => model.ScheduleStart, "", new { @class = "text-danger" })
                                    </p>
                                </div>

                                <div id="Calendar" class="FloatDivLeft">
                                    <fieldset>
                                        <legend>Calendar:</legend>
                                        @Html.DayPilotMonth("dp", new DayPilotMonthConfig
                                        {
                                            BackendUrl = Url.Content("~/Message/Backend"),
                                        })
                                    </fieldset>
                                </div>

                                <div id="Repeat" class="FloatDivRight">
                                    <fieldset>
                                        <legend>Repeat:</legend>
                                        <p>Hourly: <input type="radio" value="hourly" name="repetition" id="hourly"></p>
                                        <p>Daily: <input type="radio" value="daily" name="repetition" id="daily"></p>
                                        <p>Weekly: <input type="radio" value="weekly" name="repetition" id="weekly"></p>
                                        <p>Monthly: <input type="radio" value="monthly" name="repetition" id="monthly"></p>
                                    </fieldset>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <div id="" class="ClearBoth">
                                <div id="FirstHortDiv" class="FloatDivLeft">
                                    <p>Screen Location/Coordinates:</p>
                                    @Html.EnumDropDownListFor(model => model.MessageLocation)
                                    @Html.ValidationMessageFor(model => model.MessageLocation, "", new { @class = "text-danger" })
                                </div>

                                <div id="SecondHortDiv" class="FloatDivLeft">
                                    <p>Expiration:</p>
                                    @Html.EditorFor(model => model.Expiration)
                                    @Html.ValidationMessageFor(model => model.Expiration, "", new { @class = "text-danger" })
                                </div>

                                <div id="ThirdHortDiv" class="FloatDivRight">
                                    <p>Duration:</p>
                                    @Html.EditorFor(model => model.duration)
                                    @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="odd">
                            <div id="Tags" class="ClearBoth">
                                <div id="" class="FloatDivLeft">
                                    <p>
                                        <label for="">AD	Group:</label>
                                        <input id="ADGroupSearch" type="text" name="" />
                                    </p>
                                </div>
                                <div  class="FloatDivRight">
                                    <p>
                                        <label for="">Username:</label>
                                        <input id="userNameSearch" type="text" name="">
                                    </p>
                                </div>
                                <div  class="FloatDivRight">
                                    <p>
                                        <label for="">Computer Name:</label>
                                        <input id="computerSearch" type="text" name="">
                                    </p>
                                </div>
                                <div class="ClearBoth FloatDivLeft" style="margin-left:23px">
                                    <p>
                                        <label for="">Subnet:</label>
                                        <input id="subNetSearch" type="text" name="">
                                    </p>
                                </div>
                            </div>
                        </fieldset>
                    </fieldset>
                </div><!--end of AdvancedWrapper-->
                <button type="button" value="">Cancel</button>
                <button type="submit" >Transmit</button>

            </form>
        </div><!--end of wrapper-->

     @*</div>*@
}

<script type="text/javascript">
    $("#ScheduleStart").datetimepicker({ inline: true, minDate: 'yesterday' });
    $("#Expiration").datetimepicker({ inline: true, minDate: 'tommorow' });
    $("#ADGroupSearch").autocomplete({
        source: function (request, response) {
            jQuery.get("/Tag/GetADGroups", {
                term: request.term
            }, function (data) {
                // assuming data is a JavaScript array such as
                // ["one@abc.de", "onf@abc.de","ong@abc.de"]
                // and not a string
                response(data);
            });
        },
        minLength: 3
    });

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
